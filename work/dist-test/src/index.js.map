{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"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","sourcesContent":["export interface AttemptContext {\n  attemptNum: number;\n  attemptsRemaining: number;\n  aborted: boolean;\n  abort: () => void;\n}\n\nexport type AttemptFunction<T> = (context: AttemptContext, options: AttemptOptions<T>) => Promise<T>;\nexport type BeforeAttempt<T> = (context: AttemptContext, options: AttemptOptions<T>) => void;\nexport type CalculateDelay<T> = (context: AttemptContext, options: AttemptOptions<T>) => number;\nexport type HandleError<T> = (err: any, context: AttemptContext, options: AttemptOptions<T>) => void;\nexport type HandleTimeout<T> = (context: AttemptContext, options: AttemptOptions<T>) => Promise<T>;\nexport type HandleTotalTimeout<T> = (options: AttemptOptions<T>) => Promise<T>;\n\nexport interface AttemptOptions<T> {\n  readonly delay: number;\n  readonly initialDelay: number;\n  readonly minDelay: number;\n  readonly maxDelay: number;\n  readonly factor: number;\n  readonly maxAttempts: number;\n  readonly timeout: number;\n  readonly totalTimeout: number;\n  readonly jitter: boolean;\n  readonly handleError: HandleError<T> | null;\n  readonly handleTimeout: HandleTimeout<T> | null;\n  readonly handleTotalTimeout: HandleTotalTimeout<T> | null;\n  readonly beforeAttempt: BeforeAttempt<T> | null;\n  readonly calculateDelay: CalculateDelay<T> | null;\n}\n\nexport type PartialAttemptOptions<T> = {\n  readonly [P in keyof AttemptOptions<T>]?: AttemptOptions<T>[P];\n};\n\nfunction applyDefaults<T> (options?: PartialAttemptOptions<T>): AttemptOptions<T> {\n  if (!options) {\n    options = {};\n  }\n\n  return {\n    delay: (options.delay === undefined) ? 200 : options.delay,\n    initialDelay: (options.initialDelay === undefined) ? 0 : options.initialDelay,\n    minDelay: (options.minDelay === undefined) ? 0 : options.minDelay,\n    maxDelay: (options.maxDelay === undefined) ? 0 : options.maxDelay,\n    factor: (options.factor === undefined) ? 0 : options.factor,\n    maxAttempts: (options.maxAttempts === undefined) ? 3 : options.maxAttempts,\n    timeout: (options.timeout === undefined) ? 0 : options.timeout,\n    totalTimeout: (options.totalTimeout === undefined) ? 0 : options.totalTimeout,\n    jitter: (options.jitter === true),\n    handleError: (options.handleError === undefined) ? null : options.handleError,\n    handleTimeout: (options.handleTimeout === undefined) ? null : options.handleTimeout,\n    handleTotalTimeout: (options.handleTotalTimeout === undefined) ? null : options.handleTotalTimeout,\n    beforeAttempt: (options.beforeAttempt === undefined) ? null : options.beforeAttempt,\n    calculateDelay: (options.calculateDelay === undefined) ? null : options.calculateDelay\n  };\n}\n\nexport async function sleep (delay: number) {\n  return new Promise((resolve, reject) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function defaultCalculateDelay<T> (context: AttemptContext, options: AttemptOptions<T>): number {\n  let delay = options.delay;\n\n  if (delay === 0) {\n    // no delay between attempts\n    return 0;\n  }\n\n  if (options.factor) {\n    delay *= Math.pow(options.factor, context.attemptNum - 1);\n\n    if (options.maxDelay !== 0) {\n      delay = Math.min(delay, options.maxDelay);\n    }\n  }\n\n  if (options.jitter) {\n    // Jitter will result in a random value between `minDelay` and\n    // calculated delay for a given attempt.\n    // See https://www.awsarchitectureblog.com/2015/03/backoff.html\n    // We're using the \"full jitter\" strategy.\n    const min = Math.ceil(options.minDelay);\n    const max = Math.floor(delay);\n    delay = Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  return Math.round(delay);\n}\n\nexport async function retry<T> (\n  attemptFunc: AttemptFunction<T>,\n  attemptOptions?: PartialAttemptOptions<T>): Promise<any> {\n\n  const options = applyDefaults(attemptOptions);\n\n  for (const prop of [\n    'delay',\n    'initialDelay',\n    'minDelay',\n    'maxDelay',\n    'maxAttempts',\n    'timeout',\n    'totalTimeout'\n  ]) {\n    const value: any = (options as any)[prop];\n\n    if (!Number.isInteger(value) || (value < 0)) {\n      throw new Error(`Value for ${prop} must be an integer greater than or equal to 0`);\n    }\n  }\n\n  if ((options.factor.constructor !== Number) || (options.factor < 0)) {\n    throw new Error(`Value for factor must be a number greater than or equal to 0`);\n  }\n\n  if (options.delay < options.minDelay) {\n    throw new Error(`delay cannot be less than minDelay (delay: ${options.delay}, minDelay: ${options.minDelay}`);\n  }\n\n  const context: AttemptContext = {\n    attemptNum: 0,\n    attemptsRemaining: options.maxAttempts ? options.maxAttempts : -1,\n    aborted: false,\n    abort () {\n      context.aborted = true;\n    }\n  };\n\n  const calculateDelay = options.calculateDelay || defaultCalculateDelay;\n\n  async function makeAttempt (): Promise<any> {\n    if (options.beforeAttempt) {\n      options.beforeAttempt(context, options);\n    }\n\n    if (context.aborted) {\n      const err: any = new Error(`Attempt aborted`);\n      err.code = 'ATTEMPT_ABORTED';\n      throw err;\n    }\n\n    const onError = async (err: any) => {\n      if (options.handleError) {\n        options.handleError(err, context, options);\n      }\n\n      if (context.aborted || (context.attemptsRemaining === 0)) {\n        throw err;\n      }\n\n      // We are about to try again so increment attempt number\n      context.attemptNum++;\n\n      const delay = calculateDelay(context, options);\n      if (delay) {\n        await sleep(delay);\n      }\n\n      return makeAttempt();\n    };\n\n    if (context.attemptsRemaining > 0) {\n      context.attemptsRemaining--;\n    }\n\n    if (options.timeout > 0) {\n      return new Promise((resolve, reject) => {\n        const timer = setTimeout(() => {\n          if (options.handleTimeout) {\n            resolve(options.handleTimeout(context, options));\n          } else {\n            const err: any = new Error(`Retry timeout (attemptNum: ${context.attemptNum}, timeout: ${options.timeout})`);\n            err.code = 'ATTEMPT_TIMEOUT';\n            reject(err);\n          }\n        }, options.timeout);\n\n        attemptFunc(context, options).then((result: T) => {\n          clearTimeout(timer);\n          resolve(result);\n        }).catch((err: any) => {\n          clearTimeout(timer);\n          resolve(onError(err));\n        });\n      });\n    } else {\n      // No timeout provided so wait indefinitely for the returned promise\n      // to be resolved.\n      return attemptFunc(context, options).catch(onError);\n    }\n  }\n\n  const initialDelay = options.calculateDelay\n    ? options.calculateDelay(context, options)\n    : options.initialDelay;\n\n  if (initialDelay) {\n    await sleep(initialDelay);\n  }\n\n  if (options.totalTimeout > 0) {\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        context.abort();\n        if (options.handleTotalTimeout) {\n          resolve(options.handleTotalTimeout(options));\n        } else {\n          const err: any = new Error(`Total timeout (totalTimeout: ${options.totalTimeout})`);\n          err.code = 'TOTAL_TIMEOUT';\n          reject(err);\n        }\n      }, options.totalTimeout);\n\n      makeAttempt().then((result: T) => {\n        clearTimeout(timer);\n        resolve(result);\n      }).catch((err: any) => {\n        clearTimeout(timer);\n        reject(err);\n      });\n    });\n  } else {\n    // No totalTimeout provided so wait indefinitely for the returned promise\n    // to be resolved.\n    return makeAttempt();\n  }\n}\n"]}